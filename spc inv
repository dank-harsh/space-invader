import random
import math
import pygame

#initializze the pygame
pygame.init()

#create the screen box
screen = pygame.display.set_mode((800, 600))

#background
background = pygame.image.load('background.jpg')

#title and icon
pygame.display.set_caption("Space Invaders")
#icon
icon = pygame.image.load('ufo.png')
pygame.display.set_icon(icon)


#player
playerImg = pygame.image.load('player.png')
playerX = 370
playerY = 480
playerX_change = 0


#enemy
enemyImg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
num_of_enemies = 6

for i in range(num_of_enemies):
  enemyImg.append(pygame.image.load('enemy.png'))
  enemyX.append(random.randint(0, 735))
  enemyY.append(random.randint(50, 150))
  enemyX_change.append(0.2)
  enemyY_change.append(40)

#bullet

#ready means u cant see bullet on screen
# fire means bullet is currently moving
bulletImg = pygame.image.load('bullet.png')
bulletX = 0
bulletY = 480
bulletX_change = 0
bulletY_change = 10
bullet_state = "ready"

score = 0



def player(x, y):
    screen.blit(playerImg[i],(x, y))

def enemy(x,y,i):
    screen.blit (enemyImg,(x, y))

def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bulletImg, (x + 16, y + 10))

def isCollision(enemyX,enemyY,bulletX,bulletY):
    distance = math.sqrt((math.pow(enemyX-bulletX,2)) + (math.pow(enemyY-bulletY,2)))
    if distance < 27:
        return True
    else:
        return False



#game loop
running = True
while running:
    # rgb red green blue
    screen.fill((0, 0, 0))
    #backgrounf image
    screen.blit(background,(0,0))

  # print(playerX)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

#if keystroke is pressed check whether its right or left
    if event.type == pygame.KEYDOWN:

        if event.key == pygame.K_LEFT:
            playerX_change = -0.3
        if event.key == pygame.K_RIGHT:
            playerX_change = 0.3
        if event.key == pygame.K_UP:
            if bullet_state is "ready":
                #bulletSound = mixer.Sound("laser.wav")
                #bulletSound.play()
                # Get the current x cordinate of the spaceship
                bulletX = playerX
                fire_bullet(bulletX, bulletY)

    if event.type == pygame.KEYUP:
        if event.type == pygame.K_LEFT or event.key == pygame.K_RIGHT:
            playerX_change = 0

    # 5 = 5 + -0.1 -> 5 = 5 - 0.1
    #5 = 5 + 0.1
    #checking for boundaries of spaceship so it dosent go out of boundary
    playerX += playerX_change

    if playerX <=0:
        playerX = 0
    elif playerX >=736:
        playerX = 736
#enemy movement
    for i in range(num_of_enemies):
      enemyX[i] += enemyX_change[i]

    if enemyX[i] <= 0:
        enemyX_change[i] = 0.2
        enemyY[i] += enemyY_change[i]
    elif enemyX[i] >= 736:
        enemyX_change[i] = -0.2
        enemyY[i] += enemyY_change[i]
        # collision
    collision = isCollision(enemyX[i], enemyY[i], bulletX, bulletY)
    if collision:

        bulletY = 480
        bullet_state = "ready"
        score += 1
        print(score)
        enemyX[i] = random.randint(0, 735)
        enemyY[i] = random.randint(50, 150)

    enemy(enemyX[i], enemyY[i],i)

     #bullet movement
    if bulletY <= 0:
        bulletY = 480
        bullet_state = "ready"

    if bullet_state == "fire":
        fire_bullet(bulletX, bulletY)
        bulletY -= bulletY_change



    player(playerX,playerY)


    pygame.display.update()

